// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Followed extends ethereum.Event {
  get params(): Followed__Params {
    return new Followed__Params(this);
  }
}

export class Followed__Params {
  _event: Followed;

  constructor(event: Followed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get child(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get parent(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class FollowerDeleted extends ethereum.Event {
  get params(): FollowerDeleted__Params {
    return new FollowerDeleted__Params(this);
  }
}

export class FollowerDeleted__Params {
  _event: FollowerDeleted;

  constructor(event: FollowerDeleted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get parent(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get child(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unfollowed extends ethereum.Event {
  get params(): Unfollowed__Params {
    return new Unfollowed__Params(this);
  }
}

export class Unfollowed__Params {
  _event: Unfollowed;

  constructor(event: Unfollowed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get child(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get parent(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  followedBy(param0: Address, param1: Address): boolean {
    let result = super.call(
      "followedBy",
      "followedBy(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_followedBy(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "followedBy",
      "followedBy(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  followerCount(param0: Address): BigInt {
    let result = super.call(
      "followerCount",
      "followerCount(address):(uint32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_followerCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "followerCount",
      "followerCount(address):(uint32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  following(param0: Address, param1: Address): boolean {
    let result = super.call("following", "following(address,address):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_following(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "following",
      "following(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FollowCall extends ethereum.Call {
  get inputs(): FollowCall__Inputs {
    return new FollowCall__Inputs(this);
  }

  get outputs(): FollowCall__Outputs {
    return new FollowCall__Outputs(this);
  }
}

export class FollowCall__Inputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }

  get parent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FollowCall__Outputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }
}

export class UnfollowCall extends ethereum.Call {
  get inputs(): UnfollowCall__Inputs {
    return new UnfollowCall__Inputs(this);
  }

  get outputs(): UnfollowCall__Outputs {
    return new UnfollowCall__Outputs(this);
  }
}

export class UnfollowCall__Inputs {
  _call: UnfollowCall;

  constructor(call: UnfollowCall) {
    this._call = call;
  }

  get parent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnfollowCall__Outputs {
  _call: UnfollowCall;

  constructor(call: UnfollowCall) {
    this._call = call;
  }
}

export class DeleteFollowerCall extends ethereum.Call {
  get inputs(): DeleteFollowerCall__Inputs {
    return new DeleteFollowerCall__Inputs(this);
  }

  get outputs(): DeleteFollowerCall__Outputs {
    return new DeleteFollowerCall__Outputs(this);
  }
}

export class DeleteFollowerCall__Inputs {
  _call: DeleteFollowerCall;

  constructor(call: DeleteFollowerCall) {
    this._call = call;
  }

  get child(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeleteFollowerCall__Outputs {
  _call: DeleteFollowerCall;

  constructor(call: DeleteFollowerCall) {
    this._call = call;
  }
}
